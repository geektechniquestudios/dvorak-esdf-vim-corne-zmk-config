/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

    macros {
        scrnrt: screen_right {
            label = "SCREEN_RIGHT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LGUI &kp LCTRL>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LGUI &kp LCTRL>
                ;
        };
        scrnlft: screen_left {
            label = "SCREEN_LEFT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LGUI &kp LCTRL>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LGUI &kp LCTRL>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_alt {
            timeout-ms = <50>;
            key-positions = <36 37>;
            bindings = <&kp LGUI>;
        };
    };

    behaviors {
        dbspc: del_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        shftcap: shift_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&kp CAPSLOCK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        shflyr1: shift_layer1 {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_LAYER1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
            mods = <(MOD_LSFT|MOD_RSFT)>; 
        };
        shflyr2: shift_layer2 {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_LAYER2";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&to 2>;
            mods = <(MOD_LSFT|MOD_RSFT)>; 
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// layer 0
// --------------------------------------------------------------------------------------------
//  | TAB  |  '  |  ,  |  .  |  p   |  y  |          |  f  | g  | c  |  r  |  l  | /    |
//  | BKSP |  a  |  o  |  e  |  u   |  i  |          |  d  | h  | t  |  n  |  s  | ENT  |
//  | SHFT |  ;  |  q  |  j  |  k   |  x  |          |  b  | m  | w  |  v  |  z  | SHFT |
//                     | ALT | CTRL | ESC |          | SPC | l2 | l1 |
                        bindings = <
   &kp TAB   &kp SQT  &kp COMMA &kp DOT  &kp P     &kp Y              &kp F     &kp G &kp C &kp R &kp L &kp SLASH
   &dbspc    &kp A    &kp O     &kp E    &kp U     &kp I              &kp D     &kp H &kp T &kp N &kp S &kp RET
   &shftcap  &kp SEMI &kp Q     &kp J    &kp K     &kp X              &kp B     &kp M &kp W &kp V &kp Z &shftcap
                                &kp LALT &kp LCTRL &gresc             &kp SPACE &mo 2 &mo 1

                        >;
                };

                lower_layer {
// layer 1
// -----------------------------------------------------------------------------------------------
// | TAB  |  !   |  @  |  #   | $    | %   |          | ^   | &  | *  |  (  |  )  | -     |
// | BKSP |  1   |  2  |  3   | 4    | 5   |          | 6   | 7  | 8  |  9  |  0  | ENT   |
// | SHFT |  F1  |  F2 |  F3  | .    | F5  |          | F6  | F7 | F8 |  F9 | F10 | SHIFT |
//                     | ALT  | CTRL | SPC |          | SPC |    |    |
                        bindings = <
   &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR  &kp PERCENT          &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &kp MINUS
   &dbspc    &kp N1   &kp N2 &kp N3   &kp N4    &kp N5               &kp N6    &kp N7   &kp N8   &kp N9    &kp N0   &kp RET
   &shftcap  &kp F1   &kp F2 &kp F3   &kp DOT   &kp F5               &kp F6    &kp F7   &kp F8   &kp F9    &kp F10  &shftcap
                             &kp LALT &kp LCTRL &kp SPACE            &kp SPACE &trans   &trans
                        >;
                };

                raise_layer {
// layer 2
// -------------------------------------------------------------------------------------------
// | TAB   |   !     |  @  |  UP  |  $   |  %     |          |  [  | ]  | ^  |  /  |  \  | "|" |
// | BKSP  | HOME    | LFT | DOWN | RGT  | END    |          |  (  | )  | =  |  <  |  >  | ENT |
// | SHIFT | scrnlft |     | #    | .    | scrnrt |          |  {  | }  | +  |  -  |  _  | &   |
//                         | ALT  | CTRL | SPC    |          | SPC |    |    |
                        bindings = <
  &kp TAB  &kp EXCL &kp AT   &kp UP   &kp DLLR  &kp PERCENT         &kp LBKT  &kp RBKT  &kp CARET &kp SLASH &kp BACKSLASH &kp PIPE 
  &dbspc   &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp END             &kp LPAR  &kp RPAR  &kp EQUAL &kp LT    &kp GT        &kp RET
  &shftcap &scrnlft &trans   &kp HASH &kp DOT   &scrnrt             &kp LBRC  &kp RBRC  &kp PLUS  &kp MINUS &kp UNDER     &kp AMPS 
                             &kp LALT &kp LCTRL &kp SPACE           &kp SPACE &trans    &trans
                        >;
                };
        };
};
